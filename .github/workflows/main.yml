name: Build

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12.8.1'
        registry-url: 'https://registry.npmjs.org'

    - name: Windows build
      if: ${{ matrix.os == 'windows-latest' }}
      shell: cmd
      run: |
        call .\script\build.bat

    - name: Linux build
      if: ${{ matrix.os == 'ubuntu-latest' }}
      shell: bash
      run: |
        chmod +x ./script/build.sh
        ./script/build.sh

    - name: macOS build
      if: ${{ matrix.os == 'macos-latest' }}
      shell: bash
      run: |
        chmod +x ./script/build.sh
        ./script/build.sh

    - name: Test
      run: npm run test-audio

    - name: Before Deploy
      if: ${{ startsWith(github.event.ref, 'refs/tags') }}
      run: node ./script/before-deploy.js

    - name: Publish
      if: ${{ startsWith(github.event.ref, 'refs/tags') && matrix.os == 'ubuntu-latest' }}
      run: |
        node ./script/before-publish.js
        npm publish
      env:
        # NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        NPMTOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create release
      if: ${{ startsWith(github.event.ref, 'refs/tags') }}
      uses: toyobayashi/upload-release-assets@v3.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.after }}
        release_name: ${{ github.event.after }}
        draft: true
        prerelease: false
        assets: ./release/*.node
